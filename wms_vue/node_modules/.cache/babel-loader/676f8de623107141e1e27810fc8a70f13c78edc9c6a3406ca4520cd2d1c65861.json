{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from '@/request/request';\n// import request from '@/request/request'\nexport default {\n  name: 'app',\n  data() {\n    //id校验\n    // var checkId = (rule, value, callback) => {\n    //   const numValue = String(value);\n    //   if (value === '') {\n    //      callback(new Error('工号不能为空'));\n    //   }\n    //   if (isNaN(numValue)) {\n    //      callback(new Error('请输入数字值'));\n    //   } else {\n    //     if (numValue.length !== 4) {\n    //       callback(new Error('必须是4位数字值'));\n    //     } else {\n    //       callback();\n    //     }\n    //   }\n    // };\n\n    //密码校验\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        password: '',\n        checkPass: '',\n        userid: '',\n        userName: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        id: [{\n          required: true,\n          message: '请输入工号',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (typeof value !== 'number' || isNaN(value)) {\n              callback(new Error('必须输入数字'));\n            } else if (value.length !== 4) {\n              callback(new Error('必须是4位数字值'));\n            } else {\n              callback();\n            }\n          },\n          trigger: ['blur']\n        }],\n        name: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  components: {},\n  methods: {\n    submit() {\n      request.post(\"/user/register\", this.ruleForm).then(res => {\n        if (res.code == 0) {\n          this.$notify.success(\"注册成功\");\n          this.$router.push({\n            path: '/login'\n          });\n        } else {\n          this.$notify.error(\"res.msg\");\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tologin() {\n      this.$router.push({\n        path: '/login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","pass","password","userid","userName","rules","validator","trigger","id","required","message","isNaN","length","components","methods","submit","post","then","res","code","$notify","success","$router","push","path","error","resetForm","formName","resetFields","tologin"],"sources":["src/components/register.vue"],"sourcesContent":["<template>\r\n <div id='app'>\r\n    <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" style=\"width:400px\">\r\n    <h2 class=\"text-center\">注册</h2>\r\n    <el-form-item label=\"工号\" prop=\"id\">\r\n        <el-input v-model.number=\"ruleForm.userid\"></el-input>\r\n    </el-form-item>\r\n    \r\n    <el-form-item label=\"用户名\" prop=\"name\">\r\n        <el-input v-model=\"ruleForm.userName\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n    \r\n    <el-form-item>                      \r\n        <el-button type=\"primary\" @click=\"submit\">注册</el-button>\r\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n    </el-form-item>\r\n\r\n    <p class=\"text-center mt-3\">已有账号? <a href=\"#\"  @click=\"tologin\">点击登录</a></p>\r\n    </el-form>\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport request from '@/request/request';\r\n// import request from '@/request/request'\r\n export default {\r\n    name:'app',\r\n    data () {\r\n//id校验\r\n      // var checkId = (rule, value, callback) => {\r\n      //   const numValue = String(value);\r\n      //   if (value === '') {\r\n      //      callback(new Error('工号不能为空'));\r\n      //   }\r\n      //   if (isNaN(numValue)) {\r\n      //      callback(new Error('请输入数字值'));\r\n      //   } else {\r\n      //     if (numValue.length !== 4) {\r\n      //       callback(new Error('必须是4位数字值'));\r\n      //     } else {\r\n      //       callback();\r\n      //     }\r\n      //   }\r\n      // };\r\n\r\n//密码校验\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n          callback();\r\n        }\r\n      };\r\n      var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.ruleForm.pass) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n\r\n       return {\r\n        ruleForm: {\r\n          password: '',\r\n          checkPass: '',\r\n          userid: '',\r\n          userName: '',\r\n       },\r\n       rules: {\r\n          pass: [\r\n            { validator: validatePass, trigger: 'blur' }\r\n          ],\r\n          checkPass: [\r\n            { validator: validatePass2, trigger: 'blur' }\r\n          ],\r\n          id: [\r\n            { required: true, message: '请输入工号', trigger: 'blur' },\r\n            { validator: (rule, value, callback) => {\r\n                if (typeof value !== 'number' || isNaN(value)) {\r\n                    callback(new Error('必须输入数字'));\r\n                } else if (value.length !== 4) {\r\n                    callback(new Error('必须是4位数字值'));\r\n                } else {\r\n                    callback();\r\n                }\r\n              },\r\n            trigger: ['blur'] }\r\n          ],\r\n          name: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' }, \r\n          ]\r\n        }\r\n       };\r\n    },\r\n    components: {\r\n\r\n    },\r\n    methods: { \r\n      submit(){\r\n        request.post(\"/user/register\",this.ruleForm).then(res=>{\r\n          if(res.code==0){\r\n            this.$notify.success(\"注册成功\")\r\n            this.$router.push({path:'/login'})\r\n          }else{\r\n            this.$notify.error(\"res.msg\")\r\n          }\r\n        })\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      },\r\n      tologin(){\r\n        this.$router.push({path:'/login'})\r\n      }\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.demo-ruleForm{\r\n    margin: 0 auto;        /* 水平居中 */\r\n    padding: 20px;\r\n    margin-top:250px;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 22px; /* 默认是 18px，增加间距 */\r\n  text-align: left;\r\n}              \r\n \r\n</style>\r\n"],"mappings":";AA+BA,OAAAA,OAAA;AACA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,IAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,aAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,QAAA,CAAAK,IAAA;QACAP,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IAEA;MACAE,QAAA;QACAM,QAAA;QACAL,SAAA;QACAM,MAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAJ,IAAA,GACA;UAAAK,SAAA,EAAAf,YAAA;UAAAgB,OAAA;QAAA,EACA;QACAV,SAAA,GACA;UAAAS,SAAA,EAAAN,aAAA;UAAAO,OAAA;QAAA,EACA;QACAC,EAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAH,OAAA;QAAA,GACA;UAAAD,SAAA,EAAAA,CAAAd,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA,WAAAD,KAAA,iBAAAkB,KAAA,CAAAlB,KAAA;cACAC,QAAA,KAAAC,KAAA;YACA,WAAAF,KAAA,CAAAmB,MAAA;cACAlB,QAAA,KAAAC,KAAA;YACA;cACAD,QAAA;YACA;UACA;UACAa,OAAA;QAAA,EACA;QACAlB,IAAA,GACA;UAAAoB,QAAA;UAAAC,OAAA;UAAAH,OAAA;QAAA;MAEA;IACA;EACA;EACAM,UAAA,GAEA;EACAC,OAAA;IACAC,OAAA;MACA3B,OAAA,CAAA4B,IAAA,wBAAApB,QAAA,EAAAqB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;YAAAC,IAAA;UAAA;QACA;UACA,KAAAJ,OAAA,CAAAK,KAAA;QACA;MACA;IACA;IACAC,UAAAC,QAAA;MACA,KAAA7B,KAAA,CAAA6B,QAAA,EAAAC,WAAA;IACA;IACAC,QAAA;MACA,KAAAP,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EAEA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}