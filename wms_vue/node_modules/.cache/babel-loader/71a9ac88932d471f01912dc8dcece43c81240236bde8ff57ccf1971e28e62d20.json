{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport request from '@/request/request';\nexport default {\n  created() {\n    this.load();\n  },\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      //当前页码\n      pageSize: 5,\n      //每页个数\n      dname: '',\n      id: '',\n      total: 0,\n      ids: [],\n      user: JSON.parse(localStorage.getItem('user') || '{}'),\n      address: '',\n      introduce: ''\n    };\n  },\n  methods: {\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning(\"请选择要删除的数据\");\n        return;\n      }\n      this.$confirm('您确认批量删除这些数据吗?', '确认删除', {\n        type: \"warning\"\n      }).then(() => {\n        this.$request.delete('/deposity/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === 0) {\n            this.$message.success(\"批量删除成功\");\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    del(id) {\n      this.$confirm('您确认删除吗?', '确认删除', {\n        type: \"warning\"\n      }).then(() => {\n        this.$request.delete('/deposity/delete/' + id).then(res => {\n          if (res.code === 0) {\n            this.$message.success(\"删除成功\");\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    reset() {\n      this.operation = '';\n      this.dname = '';\n      this.address = '';\n      this.load(this.pageNum);\n    },\n    handleSelectionChange(rows) {\n      this.ids = rows.map(v => v.id); //把对象数组变成数字数组,v.recordId与前端获取的row的字段名一致，刚开始写recoord_id一直不成功\n    },\n    load(pageNum) {\n      //分页查询\n      if (pageNum) {\n        this.pageNum = pageNum;\n      }\n      request.get('/deposity/selectByPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          dname: this.dname,\n          address: this.address\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          this.tableData = res.data.records;\n          this.total = res.data.total;\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["request","created","load","data","tableData","pageNum","pageSize","dname","id","total","ids","user","JSON","parse","localStorage","getItem","address","introduce","methods","delBatch","length","$message","warning","$confirm","type","then","$request","delete","res","code","success","error","msg","catch","del","reset","operation","handleSelectionChange","rows","map","v","get","params","records","$notify","handleCurrentChange"],"sources":["src/components/manager_deposity/search_deposity.vue"],"sourcesContent":["<template>\r\n <div>\r\n  \r\n  <div style=\"margin-top:20px; margin-bottom: 30px; display:flex;\">\r\n      <el-input v-model=\"dname\" placeholder=\"请输入仓库名称\" style=\"width:20%; margin-left: 10px\"></el-input>\r\n      <el-input v-model=\"address\" placeholder=\"请输入仓库地址\" style=\"width:20%; margin-left: 10px\"></el-input>\r\n      <el-button type=\"primary\" style=\"margin-left: 40px\" @click=\"load(1)\"><i class=\"el-icon-search\"></i> 查询</el-button>\r\n      <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"reset\"><i class=\"el-icon-refresh-right\"></i> 重置</el-button>\r\n  </div>\r\n\r\n\r\n  <div style=\"margin-top: 20px;margin-bottom: 10px\">\r\n    <el-button type=\"danger\" plain @click=\"delBatch\" v-if=\"user.roleid!=1\">批量删除</el-button>\r\n  </div>\r\n  \r\n\r\n<!-- 表单区域 -->\r\n  <el-table :data=\"tableData\" stripe border style=\"width: 100%\" \r\n    :cell-style=\"{textAlign:'center'}\" :header-cell-style=\"{textAlign:'center',backgroundColor:'aliceblue',color:'#666'}\"\r\n    @selection-change=\"handleSelectionChange\">\r\n    <!-- 多选 -->\r\n    <el-table-column type=\"selection\" width=\"60\" align=\"center\"> </el-table-column>\r\n    <el-table-column prop=\"id\" label=\"记录编号\" > </el-table-column>\r\n    <el-table-column prop=\"dname\" label=\"仓库名称\" > </el-table-column>\r\n    <el-table-column prop=\"address\" label=\"仓库地址\" > </el-table-column>\r\n    <el-table-column prop=\"introduce\" label=\"仓库简介\" > </el-table-column>\r\n    <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\r\n      <template slot-scope=\"scope\">\r\n         <el-button  type=\"text\" size=\"medium\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n        <el-button type=\"text\" size=\"medium\" @click=\"del(scope.row.id)\">删除</el-button>\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n\r\n\r\n<!-- 分页组件 -->\r\n  <div style=\"margin:10px\">\r\n    <el-pagination\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"pageNum\"\r\n      :page-sizes=\"[5, 10, 15, 20]\"\r\n      :page-size=\"pageSize\"\r\n      layout=\"total, prev, pager, next\"\r\n      :total=\"total\">\r\n    </el-pagination>\r\n  </div>\r\n\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport request from '@/request/request'\r\n\r\n export default {\r\n  created(){\r\n    this.load();\r\n  },\r\n    data() {\r\n      return {\r\n        tableData: [],\r\n        pageNum: 1,//当前页码\r\n        pageSize: 5,//每页个数\r\n        dname: '',\r\n        id: '',\r\n        total: 0,\r\n        ids: [],\r\n        user:JSON.parse(localStorage.getItem('user') || '{}'),\r\n        address: '',\r\n        introduce: '', \r\n\r\n      }\r\n    },\r\n    methods: {\r\n        delBatch(){\r\n        if(!this.ids.length)\r\n        {\r\n          this.$message.warning(\"请选择要删除的数据\");\r\n          return\r\n        }\r\n        this.$confirm('您确认批量删除这些数据吗?', '确认删除', {type:\"warning\"}).then(() => {\r\n          this.$request.delete('/deposity/delete/batch',{\r\n            data:this.ids\r\n          }).then(res =>{\r\n            if(res.code===0)\r\n            {\r\n              this.$message.success(\"批量删除成功\");\r\n              this.load(1)\r\n            }else{\r\n              this.$message.error(res.msg);\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      },\r\n        del(id){\r\n        this.$confirm('您确认删除吗?', '确认删除', {type:\"warning\"}).then(() => {\r\n          this.$request.delete('/deposity/delete/'+ id).then(res =>{\r\n            if(res.code===0)\r\n            {\r\n              this.$message.success(\"删除成功\");\r\n              this.load(1)\r\n            }else{\r\n              this.$message.error(res.msg);\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      },\r\n      reset(){\r\n        this.operation=''\r\n        this.dname=''\r\n        this.address=''\r\n        this.load(this.pageNum)\r\n      },\r\n      handleSelectionChange(rows){   \r\n        this.ids=rows.map(v=>v.id)//把对象数组变成数字数组,v.recordId与前端获取的row的字段名一致，刚开始写recoord_id一直不成功\r\n      },\r\n      load(pageNum){//分页查询\r\n      if(pageNum)\r\n      {\r\n        this.pageNum=pageNum\r\n      }\r\n        request.get('/deposity/selectByPage', {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            dname: this.dname,\r\n            address: this.address,\r\n          }\r\n        }).then(res => {\r\n          if(res.code == 0){\r\n            this.tableData = res.data.records\r\n            this.total=res.data.total\r\n          }\r\n          else{\r\n            this.$notify.error(res.msg);\r\n          }\r\n    \r\n        })\r\n      },\r\n    handleCurrentChange(pageNum){\r\n      this.pageNum=pageNum\r\n      this.load(pageNum)\r\n    },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.title{\r\n  text-align:left;\r\n}\r\n \r\n</style>\r\n"],"mappings":";;AAoDA,OAAAA,OAAA;AAEA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,EAAA;MACAC,KAAA;MACAC,GAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;MACAC,SAAA;IAEA;EACA;EACAC,OAAA;IACAC,SAAA;MACA,UAAAT,GAAA,CAAAU,MAAA,EACA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA;QACA,KAAAC,QAAA,CAAAC,MAAA;UACAxB,IAAA,OAAAO;QACA,GAAAe,IAAA,CAAAG,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA,QACA;YACA,KAAAR,QAAA,CAAAS,OAAA;YACA,KAAA5B,IAAA;UACA;YACA,KAAAmB,QAAA,CAAAU,KAAA,CAAAH,GAAA,CAAAI,GAAA;UACA;QACA;MACA,GAAAC,KAAA;IACA;IACAC,IAAA1B,EAAA;MACA,KAAAe,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA;QACA,KAAAC,QAAA,CAAAC,MAAA,uBAAAnB,EAAA,EAAAiB,IAAA,CAAAG,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA,QACA;YACA,KAAAR,QAAA,CAAAS,OAAA;YACA,KAAA5B,IAAA;UACA;YACA,KAAAmB,QAAA,CAAAU,KAAA,CAAAH,GAAA,CAAAI,GAAA;UACA;QACA;MACA,GAAAC,KAAA;IACA;IACAE,MAAA;MACA,KAAAC,SAAA;MACA,KAAA7B,KAAA;MACA,KAAAS,OAAA;MACA,KAAAd,IAAA,MAAAG,OAAA;IACA;IACAgC,sBAAAC,IAAA;MACA,KAAA5B,GAAA,GAAA4B,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAhC,EAAA;IACA;IACAN,KAAAG,OAAA;MAAA;MACA,IAAAA,OAAA,EACA;QACA,KAAAA,OAAA,GAAAA,OAAA;MACA;MACAL,OAAA,CAAAyC,GAAA;QACAC,MAAA;UACArC,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,KAAA,OAAAA,KAAA;UACAS,OAAA,OAAAA;QACA;MACA,GAAAS,IAAA,CAAAG,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAzB,SAAA,GAAAwB,GAAA,CAAAzB,IAAA,CAAAwC,OAAA;UACA,KAAAlC,KAAA,GAAAmB,GAAA,CAAAzB,IAAA,CAAAM,KAAA;QACA,OACA;UACA,KAAAmC,OAAA,CAAAb,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MAEA;IACA;IACAa,oBAAAxC,OAAA;MACA,KAAAA,OAAA,GAAAA,OAAA;MACA,KAAAH,IAAA,CAAAG,OAAA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}