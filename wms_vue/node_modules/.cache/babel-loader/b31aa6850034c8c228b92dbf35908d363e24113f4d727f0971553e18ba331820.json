{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport * as echarts from 'echarts';\nconst lineoption1 = {\n  title: {\n    text: '出库金额统计',\n    left: 'center'\n  },\n  legend: {\n    data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库']\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: '1号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '2号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '3号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '4号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '5号仓库',\n    type: 'line',\n    data: []\n  }]\n};\nconst lineoption2 = {\n  title: {\n    text: '入库金额统计',\n    left: 'center'\n  },\n  legend: {\n    data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库']\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: '1号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '2号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '3号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '4号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '5号仓库',\n    type: 'line',\n    data: []\n  }]\n};\nexport default {\n  name: 'app',\n  data() {\n    return {};\n  },\n  components: {},\n  methods: {},\n  mounted() {\n    //等待页面全部元素加载完再初始化，不然 会报错\n    let lineDom1 = document.getElementById('line');\n    let lineChart1 = echarts.init(lineDom1);\n    lineChart1.setOption(lineoption1);\n    this.$request.get('/linechartsIn').then(res => {\n      lineoption1.xAxis.data = res.data?.map(v => v.date) || [];\n      // 更新每个仓库的数据\n      lineoption1.series.forEach((series, index) => {\n        // 字段名：warehouse1, warehouse2...\n        const field = `warehouse${index + 1}`;\n        series.data = res.data.map(v => v[field] || 0);\n      });\n      // 重新渲染图表\n      lineChart1.setOption(lineoption1);\n    }).catch(error => {\n      console.error('获取图表数据失败:', error);\n    });\n    let lineDom2 = document.getElementById('line');\n    let lineChart2 = echarts.init(lineDom2);\n    lineChart2.setOption(lineoption2);\n    this.$request.get('/linechartsOut').then(res => {\n      lineoption1.xAxis.data = res.data?.map(v => v.date) || [];\n      // 更新每个仓库的数据\n      lineoption1.series.forEach((series, index) => {\n        // 字段名：warehouse1, warehouse2...\n        const field = `warehouse${index + 1}`;\n        series.data = res.data.map(v => v[field] || 0);\n      });\n      // 重新渲染图表\n      lineChart2.setOption(lineoption2);\n    }).catch(error => {\n      console.error('获取图表数据失败:', error);\n    });\n  }\n};","map":{"version":3,"names":["echarts","lineoption1","title","text","left","legend","data","tooltip","trigger","xAxis","type","yAxis","series","name","lineoption2","components","methods","mounted","lineDom1","document","getElementById","lineChart1","init","setOption","$request","get","then","res","map","v","date","forEach","index","field","catch","error","console","lineDom2","lineChart2"],"sources":["src/components/manager_record/view_record.vue"],"sourcesContent":["<template>\r\n <div >\r\n   <el-row :gutter=\"10\">\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div id=\"line\" style=\"width: 100%;height: 400px\"></div>\r\n         </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div>\r\n               \r\n            </div>\r\n         </el-card>\r\n      </el-col>\r\n   </el-row>\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\n\r\nconst lineoption1 = {\r\n  title: {text: '出库金额统计', left:'center'},\r\n  legend: {data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库']},\r\n  tooltip: {trigger: 'axis'},\r\n  xAxis: {type: 'category',data: []},\r\n  yAxis: {type: 'value'},\r\n  series: [\r\n    {name: '1号仓库',type: 'line',data: []},\r\n    {name: '2号仓库',type: 'line',data: []},\r\n    {name: '3号仓库',type: 'line',data: []},\r\n    {name: '4号仓库',type: 'line',data: []},\r\n    {name: '5号仓库',type: 'line',data: []}\r\n  ]\r\n};\r\n\r\nconst lineoption2 = {\r\n  title: {text: '入库金额统计', left:'center'},\r\n  legend: {data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库']},\r\n  tooltip: {trigger: 'axis'},\r\n  xAxis: {type: 'category',data: []},\r\n  yAxis: {type: 'value'},\r\n  series: [\r\n    {name: '1号仓库',type: 'line',data: []},\r\n    {name: '2号仓库',type: 'line',data: []},\r\n    {name: '3号仓库',type: 'line',data: []},\r\n    {name: '4号仓库',type: 'line',data: []},\r\n    {name: '5号仓库',type: 'line',data: []}\r\n  ]\r\n};\r\n\r\n export default {\r\n    name:'app',\r\n    data () {\r\n       return {\r\n\r\n       }\r\n    },\r\n    components: {\r\n\r\n    },\r\n    methods: { \r\n\r\n    },\r\n    mounted () {//等待页面全部元素加载完再初始化，不然 会报错\r\n      let lineDom1 = document.getElementById('line');\r\n      let lineChart1 = echarts.init(lineDom1);\r\n      lineChart1.setOption(lineoption1);\r\n      this.$request.get('/linechartsIn').then(res =>{\r\n         lineoption1.xAxis.data = res.data?.map(v=>v.date) || [];\r\n        // 更新每个仓库的数据\r\n        lineoption1.series.forEach((series, index) => {\r\n            // 字段名：warehouse1, warehouse2...\r\n            const field = `warehouse${index + 1}`;\r\n            series.data = res.data.map(v => v[field] || 0);\r\n        });\r\n        // 重新渲染图表\r\n        lineChart1.setOption(lineoption1);\r\n    }).catch(error => {\r\n        console.error('获取图表数据失败:', error);\r\n    })\r\n\r\n\r\n       let lineDom2 = document.getElementById('line');\r\n      let lineChart2 = echarts.init(lineDom2);\r\n      lineChart2.setOption(lineoption2);\r\n      this.$request.get('/linechartsOut').then(res =>{\r\n         lineoption1.xAxis.data = res.data?.map(v=>v.date) || [];\r\n        // 更新每个仓库的数据\r\n        lineoption1.series.forEach((series, index) => {\r\n            // 字段名：warehouse1, warehouse2...\r\n            const field = `warehouse${index + 1}`;\r\n            series.data = res.data.map(v => v[field] || 0);\r\n        });\r\n        // 重新渲染图表\r\n        lineChart2.setOption(lineoption2);\r\n    }).catch(error => {\r\n        console.error('获取图表数据失败:', error);\r\n    })\r\n\r\n\r\n\r\n\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n \r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}