{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from '@/request/request';\n// import request from '@/request/request'\nexport default {\n  name: 'app',\n  data() {\n    var checkId = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('工号不能为空'));\n      }\n      if (!Number.isInteger(value)) {\n        callback(new Error('请输入数字值'));\n      } else {\n        if (value.length != 4) {\n          callback(new Error('必须是4位工号'));\n        } else {\n          callback();\n        }\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        password: '',\n        checkPass: '',\n        userid: '',\n        userName: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        name: [{\n          validator: checkName,\n          trigger: 'blur'\n        }],\n        id: [{\n          validator: checkId,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  components: {},\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tologin() {\n      this.$router.push({\n        path: '/login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkId","rule","value","callback","Error","Number","isInteger","length","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","password","userid","userName","rules","pass","validator","trigger","checkName","id","components","methods","submitForm","formName","validate","valid","alert","console","log","resetForm","resetFields","tologin","$router","push","path"],"sources":["src/components/register.vue"],"sourcesContent":["<template>\r\n <div id='app'>\r\n    <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\" style=\"width:400px\">\r\n    <h2 class=\"text-center\">注册</h2>\r\n    <el-form-item label=\"工号\" prop=\"id\">\r\n        <el-input v-model.number=\"ruleForm.userid\"></el-input>\r\n    </el-form-item>\r\n    \r\n    <el-form-item label=\"用户名\" prop=\"name\">\r\n        <el-input v-model=\"ruleForm.userName\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"密码\" prop=\"pass\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n    \r\n    <el-form-item>                      \r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">注册</el-button>\r\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n    </el-form-item>\r\n\r\n    <p class=\"text-center mt-3\">已有账号? <a href=\"#\"  @click=\"tologin\">点击登录</a></p>\r\n    </el-form>\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport request from '@/request/request';\r\n// import request from '@/request/request'\r\n export default {\r\n    name:'app',\r\n    data () {\r\n\r\n      var checkId = (rule, value, callback) => {\r\n        if (!value) {\r\n          return callback(new Error('工号不能为空'));\r\n        }\r\n        if (!Number.isInteger(value)) {\r\n          callback(new Error('请输入数字值'));\r\n        } else {\r\n          if (value.length!=4) {\r\n            callback(new Error('必须是4位工号'));\r\n          } else {\r\n            callback();\r\n          }\r\n        }\r\n      };\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n          callback();\r\n        }\r\n      };\r\n      var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.ruleForm.password) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n\r\n\r\n\r\n       return {\r\n        ruleForm: {\r\n          password: '',\r\n          checkPass: '',\r\n          userid: '',\r\n          userName: '',\r\n       },\r\n       rules: {\r\n          pass: [\r\n            { validator: validatePass, trigger: 'blur' }\r\n          ],\r\n          checkPass: [\r\n            { validator: validatePass2, trigger: 'blur' }\r\n          ],\r\n          name: [\r\n            { validator: checkName, trigger: 'blur' }\r\n          ],\r\n          id: [\r\n            { validator: checkId, trigger: 'blur' }\r\n          ],\r\n        }\r\n       };\r\n    },\r\n    components: {\r\n\r\n    },\r\n    methods: { \r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            alert('submit!');\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      },\r\n      tologin(){\r\n        this.$router.push({path:'/login'})\r\n      }\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.demo-ruleForm{\r\n    margin: 0 auto;        /* 水平居中 */\r\n    padding: 20px;\r\n    margin-top:250px;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 22px; /* 默认是 18px，增加间距 */\r\n  text-align: left;\r\n}              \r\n \r\n</style>\r\n"],"mappings":";AA+BA,OAAAA,OAAA;AACA;AACA;EACAC,IAAA;EACAC,KAAA;IAEA,IAAAC,OAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACA,OAAAC,QAAA,KAAAC,KAAA;MACA;MACA,KAAAC,MAAA,CAAAC,SAAA,CAAAJ,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,IAAAF,KAAA,CAAAK,MAAA;UACAJ,QAAA,KAAAC,KAAA;QACA;UACAD,QAAA;QACA;MACA;IACA;IACA,IAAAK,YAAA,GAAAA,CAAAP,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAK,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAT,QAAA;MACA;IACA;IACA,IAAAU,aAAA,GAAAA,CAAAZ,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAO,QAAA,CAAAK,QAAA;QACAX,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IAIA;MACAM,QAAA;QACAK,QAAA;QACAJ,SAAA;QACAK,MAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAC,IAAA,GACA;UAAAC,SAAA,EAAAX,YAAA;UAAAY,OAAA;QAAA,EACA;QACAV,SAAA,GACA;UAAAS,SAAA,EAAAN,aAAA;UAAAO,OAAA;QAAA,EACA;QACAtB,IAAA,GACA;UAAAqB,SAAA,EAAAE,SAAA;UAAAD,OAAA;QAAA,EACA;QACAE,EAAA,GACA;UAAAH,SAAA,EAAAnB,OAAA;UAAAoB,OAAA;QAAA;MAEA;IACA;EACA;EACAG,UAAA,GAEA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAf,KAAA,CAAAe,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,UAAAN,QAAA;MACA,KAAAf,KAAA,CAAAe,QAAA,EAAAO,WAAA;IACA;IACAC,QAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EAEA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}