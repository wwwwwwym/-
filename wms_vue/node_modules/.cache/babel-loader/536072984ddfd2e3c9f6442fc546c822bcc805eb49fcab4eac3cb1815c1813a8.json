{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from '@/request/request';\n// import request from '@/request/request'\nexport default {\n  name: 'user_register',\n  data() {\n    var checkName = (rule, value, callback) => {\n      if (value == '') {\n        return callback(new Error('姓名不能为空'));\n      }\n      return callback();\n    };\n    var checkId = (rule, value, callback) => {\n      const num = Number(value);\n      if (isNaN(num)) {\n        // 检查是否为有效数字\n        return callback(new Error('请输入数字值')); // 返回并终止\n      }\n      if (!Number.isInteger(num)) {\n        // 检查是否为整数\n        return callback(new Error('必须为整数')); // 返回并终止\n      }\n      if (value.length !== 4) {\n        // 检查原始输入长度\n        return callback(new Error('必须是4位工号')); // 返回并终止\n      }\n      return callback();\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        return callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        return callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        return callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.password) {\n        return callback(new Error('两次输入密码不一致!'));\n      } else {\n        return callback();\n      }\n    };\n    return {\n      ruleForm: {\n        password: '',\n        checkPass: '',\n        userid: '',\n        username: '',\n        telephone: '',\n        value: ''\n      },\n      rules: {\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        username: [{\n          validator: checkName,\n          trigger: 'blur'\n        }],\n        userid: [{\n          validator: checkId,\n          trigger: 'change'\n        }],\n        telephone: [{\n          required: true,\n          message: '请输入电话号码',\n          trigger: 'blur'\n        }, {\n          min: 11,\n          max: 11,\n          message: '长度为11个字符',\n          trigger: 'blur'\n        }]\n      },\n      options: [{\n        value: '选项1',\n        label: '黄金糕'\n      }, {\n        value: '选项2',\n        label: '双皮奶'\n      }, {\n        value: '选项3',\n        label: '蚵仔煎'\n      }, {\n        value: '选项4',\n        label: '龙须面'\n      }, {\n        value: '选项5',\n        label: '北京烤鸭'\n      }],\n      value: ''\n    };\n  },\n  components: {},\n  methods: {\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    tologin() {\n      this.$router.push({\n        path: '/login'\n      });\n    },\n    register() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        console.log(\"valid:\", valid);\n        if (valid) {\n          request.post('/user/register', this.ruleForm).then(res => {\n            if (res.code == 0) {\n              this.$message.success(\"注册成功\");\n              this.$router.push({\n                path: '/login'\n              });\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkName","rule","value","callback","Error","checkId","num","Number","isNaN","isInteger","length","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","password","userid","username","telephone","rules","validator","trigger","required","message","min","max","options","label","components","methods","resetForm","formName","resetFields","tologin","$router","push","path","register","validate","valid","console","log","post","then","res","code","$message","success","error","msg"],"sources":["src/components/user_register.vue"],"sourcesContent":["<template>\r\n <div id='user_register'>\r\n  <div style=\"height:100vh; display:flex; justify-content:center; align-items:center;background-color:#8da1e2\">     \r\n    <div style=\"display:flex; align-items:center;justify-content:center; background-color:white; width:30% ; height:70%; border-radius:5px\">\r\n      <el-form :model=\"ruleForm\" style=\"width:80%;\" :rules=\"rules\" ref=\"ruleForm\"  class=\"demo-ruleForm\" >\r\n      <!-- <el-form > -->\r\n        <div style=\"font-size:20px ;font-weight:bold ; text-align:center;\">欢迎注册仓库管理系统</div>\r\n        <el-form-item prop=\"userid\" style=\"margin-top:20px;\">\r\n            <el-input placeholder=\" 请输入工号\"  v-model=\"ruleForm.userid\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item prop=\"username\">\r\n            <el-input placeholder=\" 请输入姓名\" v-model=\"ruleForm.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"telephone\">\r\n            <el-input placeholder=\" 请输入电话号码\" v-model=\"ruleForm.telephone\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n            <el-input show-password placeholder=\" 请输入密码\" type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"checkPass\">\r\n            <el-input show-password placeholder=\" 请再次输入密码\" type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <el-select v-model=\"ruleForm.value\"  placeholder=\"请选择所负责仓库\" style=\"width:100%;\">\r\n          <el-option  v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" >\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <el-form-item>                      \r\n            <el-button type=\"primary\" @click=\"register\">注册</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n        <div> <p class=\"text-center mt-3\">已有账号? <a href=\"#\"  @click=\"tologin\">点击登录</a></p></div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport request from '@/request/request';\r\n// import request from '@/request/request'\r\n export default {\r\n    name:'user_register',\r\n    data () {\r\n      var checkName = (rule, value, callback) => {\r\n        if (value=='') {\r\n          return callback(new Error('姓名不能为空'));\r\n        }\r\n        return callback();\r\n      };\r\n      var checkId = (rule, value, callback) => {\r\n        const num = Number(value);\r\n        if (isNaN(num)) { // 检查是否为有效数字\r\n          return callback(new Error('请输入数字值')); // 返回并终止\r\n        }\r\n\r\n        if (!Number.isInteger(num)) { // 检查是否为整数\r\n          return callback(new Error('必须为整数')); // 返回并终止\r\n        }\r\n\r\n        if (value.length !== 4) { // 检查原始输入长度\r\n          return callback(new Error('必须是4位工号')); // 返回并终止\r\n        }\r\n        return callback();\r\n      };\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          return callback(new Error('请输入密码'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n          return callback();\r\n        }\r\n      };\r\n      var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          return callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.ruleForm.password) {\r\n          return callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          return callback();\r\n        }\r\n      };\r\n\r\n\r\n\r\n       return {\r\n        ruleForm: {\r\n          password: '',\r\n          checkPass: '',\r\n          userid: '',\r\n          username: '',\r\n          telephone: '',\r\n          value: '',\r\n       },\r\n       rules: {\r\n          password: [\r\n            { validator: validatePass, trigger: 'blur' }\r\n          ],\r\n          checkPass: [\r\n            { validator: validatePass2, trigger: 'blur' }\r\n          ],\r\n          username: [\r\n            { validator: checkName, trigger: 'blur' }\r\n          ],\r\n          userid: [\r\n            { validator: checkId, trigger: 'change' }\r\n          ],\r\n          telephone: [\r\n            { required: true, message: '请输入电话号码', trigger: 'blur' },\r\n            { min: 11, max: 11, message: '长度为11个字符', trigger: 'blur' }\r\n          ],\r\n        },\r\n\r\n        options: [{\r\n          value: '选项1',\r\n          label: '黄金糕'\r\n        }, {\r\n          value: '选项2',\r\n          label: '双皮奶'\r\n        }, {\r\n          value: '选项3',\r\n          label: '蚵仔煎'\r\n        }, {\r\n          value: '选项4',\r\n          label: '龙须面'\r\n        }, {\r\n          value: '选项5',\r\n          label: '北京烤鸭'\r\n        }],\r\n        value: '',\r\n\r\n       };\r\n    },\r\n    components: {\r\n\r\n    },\r\n    methods: { \r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      },\r\n      tologin(){\r\n        this.$router.push({path:'/login'})\r\n      },\r\n      register(){\r\n        this.$refs[\"ruleForm\"].validate((valid) => {\r\n          console.log(\"valid:\",valid);\r\n          if (valid){\r\n            request.post('/user/register',this.ruleForm).then(res=>{\r\n              if(res.code==0){\r\n                this.$message.success(\"注册成功\");\r\n                this.$router.push({path:'/login'})\r\n              }else{\r\n                this.$message.error(res.msg);\r\n              }\r\n              \r\n            })\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* .demo-ruleForm{\r\n    margin: 0 auto;      \r\n    padding: 20px;\r\n    margin-top:250px;\r\n} */\r\n\r\n.el-form-item {\r\n  margin-top: 22px;\r\n}              \r\n \r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}