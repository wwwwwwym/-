{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '@/router/router';\n// 封装 baseURL\nconst request = axios.create({\n  baseURL: \"http://localhost:9000\",\n  timeout: 5000\n});\n\n//reuqest 拦截器\n//可以自请求发送前对请求数据做处理，例如统一加token，统一设置请求头等\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=UTF-8';\n  let user = JSON.parse(localStorage.getItem(\"user\") || '{}'); //从当前缓存获取token\n  config.headers['token'] = user.token; //如果有token就把token设置为请求头\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n//request 拦截器可以在响应后统一处理结果\nrequest.interceptors.response.use(response => {\n  console.log(response);\n  let res = response.data;\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n  let user = JSON.parse(localStorage.getItem(\"user\") || '{}'); //从当前缓存获取token\n  if (user.token == '') {\n    localStorage.removeItem('token');\n    router.push('/login');\n  }\n  if (res.code === 1 && (res.msg === 'token无效,请重新登录' || res.msg === 'token验证失败,请重新登录')) {\n    // 401 跳转到登录页面\n    localStorage.removeItem('token');\n    router.push('/login');\n  }\n  return res;\n}, error => {\n  console.log('err' + error);\n  return Promise.reject(error);\n});\n// 向外暴露 request\nexport default request;","map":{"version":3,"names":["axios","router","request","create","baseURL","timeout","interceptors","use","config","headers","user","JSON","parse","localStorage","getItem","token","error","Promise","reject","response","console","log","res","data","removeItem","push","code","msg"],"sources":["D:/MyWMS/wms_vue/src/request/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport router from '@/router/router';\r\n// 封装 baseURL\r\nconst request = axios.create({\r\nbaseURL:\"http://localhost:9000\",\r\ntimeout:5000\r\n})\r\n\r\n//reuqest 拦截器\r\n//可以自请求发送前对请求数据做处理，例如统一加token，统一设置请求头等\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=UTF-8';\r\n\r\n    let user= JSON.parse(localStorage.getItem(\"user\") ||'{}');//从当前缓存获取token\r\n    config.headers['token'] = user.token;//如果有token就把token设置为请求头\r\n    return config\r\n},error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n//request 拦截器可以在响应后统一处理结果\r\nrequest.interceptors.response.use(response => {\r\n    console.log(response);\r\n    let res=response.data;\r\n    if(typeof res === 'string')\r\n    {\r\n        res=res ? JSON.parse(res) : res\r\n    }\r\n    let user= JSON.parse(localStorage.getItem(\"user\") ||'{}');//从当前缓存获取token\r\n    if(user.token=='')\r\n    {\r\n        localStorage.removeItem('token');\r\n        router.push('/login')\r\n    }\r\n    if(res.code === 1 && (res.msg === 'token无效,请重新登录' || res.msg === 'token验证失败,请重新登录'))\r\n    {\r\n        // 401 跳转到登录页面\r\n        localStorage.removeItem('token');\r\n        router.push('/login')\r\n    }\r\n    return res;\r\n},error => {\r\n    console.log('err'+ error)\r\n    return Promise.reject(error)\r\n})\r\n// 向外暴露 request\r\nexport default request;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AACpC;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAC,uBAAuB;EAC/BC,OAAO,EAAC;AACR,CAAC,CAAC;;AAEF;AACA;AACAH,OAAO,CAACI,YAAY,CAACJ,OAAO,CAACK,GAAG,CAACC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;EAEjE,IAAIC,IAAI,GAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAG,IAAI,CAAC,CAAC;EAC1DN,MAAM,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,CAACK,KAAK,CAAC;EACrC,OAAOP,MAAM;AACjB,CAAC,EAACQ,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACAd,OAAO,CAACI,YAAY,CAACa,QAAQ,CAACZ,GAAG,CAACY,QAAQ,IAAI;EAC1CC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,IAAIG,GAAG,GAACH,QAAQ,CAACI,IAAI;EACrB,IAAG,OAAOD,GAAG,KAAK,QAAQ,EAC1B;IACIA,GAAG,GAACA,GAAG,GAAGX,IAAI,CAACC,KAAK,CAACU,GAAG,CAAC,GAAGA,GAAG;EACnC;EACA,IAAIZ,IAAI,GAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAG,IAAI,CAAC,CAAC;EAC1D,IAAGJ,IAAI,CAACK,KAAK,IAAE,EAAE,EACjB;IACIF,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCvB,MAAM,CAACwB,IAAI,CAAC,QAAQ,CAAC;EACzB;EACA,IAAGH,GAAG,CAACI,IAAI,KAAK,CAAC,KAAKJ,GAAG,CAACK,GAAG,KAAK,eAAe,IAAIL,GAAG,CAACK,GAAG,KAAK,iBAAiB,CAAC,EACnF;IACI;IACAd,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCvB,MAAM,CAACwB,IAAI,CAAC,QAAQ,CAAC;EACzB;EACA,OAAOH,GAAG;AACd,CAAC,EAACN,KAAK,IAAI;EACPI,OAAO,CAACC,GAAG,CAAC,KAAK,GAAEL,KAAK,CAAC;EACzB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AACF;AACA,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}