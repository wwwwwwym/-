{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport * as echarts from 'echarts';\nconst lineoption1 = {\n  title: {\n    text: '出库金额统计',\n    left: 'center'\n  },\n  legend: {\n    data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],\n    top: 'bottom'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: '1号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '2号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '3号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '4号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '5号仓库',\n    type: 'line',\n    data: []\n  }]\n};\nconst lineoption2 = {\n  title: {\n    text: '入库金额统计',\n    left: 'center'\n  },\n  legend: {\n    data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],\n    top: 'bottom'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: '1号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '2号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '3号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '4号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '5号仓库',\n    type: 'line',\n    data: []\n  }]\n};\nconst pieoption = {\n  title: {\n    text: '产品出库金额占比',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [{\n    name: '产品出库金额',\n    type: 'pie',\n    radius: '50%',\n    data: [],\n    emphasis: {\n      itemStyle: {\n        shadowBlur: 10,\n        shadowOffsetX: 0,\n        shadowColor: 'rgba(0, 0, 0, 0.5)'\n      }\n    }\n  }]\n};\nexport default {\n  name: 'app',\n  data() {\n    return {};\n  },\n  components: {},\n  methods: {},\n  mounted() {\n    //等待页面全部元素加载完再初始化，不然 会报错\n    let lineDom1 = document.getElementById('line1');\n    let lineChart1 = echarts.init(lineDom1);\n    lineChart1.setOption(lineoption1);\n    this.$request.get('/linechartsIn').then(res => {\n      lineoption1.xAxis.data = res.data?.line1?.map(v => v.date) || [];\n      // 更新每个仓库的数据\n      lineoption1.series.forEach((series, index) => {\n        // 字段名：warehouse1, warehouse2...\n        const field = `warehouse${index + 1}`;\n        series.data = res.data.map(v => v[field] || 0);\n      });\n      // 重新渲染图表\n      lineChart1.setOption(lineoption1);\n    }).catch(error => {\n      console.error('获取图表数据失败:', error);\n    });\n    let lineDom2 = document.getElementById('line2');\n    let lineChart2 = echarts.init(lineDom2);\n    lineChart2.setOption(lineoption2);\n    this.$request.get('/linechartsOut').then(res => {\n      lineoption2.xAxis.data = res.data?.line2?.map(v => v.date) || [];\n      // 更新每个仓库的数据\n      lineoption2.series.forEach((series, index) => {\n        // 字段名：warehouse1, warehouse2...\n        const field = `warehouse${index + 1}`;\n        series.data = res.data.map(v => v[field] || 0);\n      });\n      // 重新渲染图表\n      lineChart2.setOption(lineoption2);\n    }).catch(error => {\n      console.error('获取图表数据失败:', error);\n    });\n    let pieDom = document.getElementById('pie');\n    let piehart = echarts.init(pieDom);\n    piehart.setOption(pieoption);\n    this.$request.get('/piecharts').then(res => {\n      // baroption.series[1].data = res.data?.bar?.map(v => v.price)||[]\n      pieoption.series[0].data = res.data?.pie?.map(v => v.value) || [];\n      piehart.setOption(pieoption);\n    });\n  }\n};","map":{"version":3,"names":["echarts","lineoption1","title","text","left","legend","data","top","tooltip","trigger","xAxis","type","yAxis","series","name","lineoption2","pieoption","orient","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","components","methods","mounted","lineDom1","document","getElementById","lineChart1","init","setOption","$request","get","then","res","line1","map","v","date","forEach","index","field","catch","error","console","lineDom2","lineChart2","line2","pieDom","piehart","pie","value"],"sources":["src/components/manager_record/view_record.vue"],"sourcesContent":["<template>\r\n <div >\r\n   <el-row :gutter=\"10\" class=\"el-row\">\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div id=\"line1\" style=\"width: 100%;height: 400px\"></div>\r\n         </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div>\r\n               <div id=\"line2\" style=\"width: 100%;height: 400px\"></div>\r\n            </div>\r\n         </el-card>\r\n      </el-col>\r\n   </el-row>\r\n\r\n   <el-row :gutter=\"10\" class=\"el-row\">\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div id=\"pie\" style=\"width: 100%;height: 400px\"></div>\r\n         </el-card>\r\n      </el-col>\r\n\r\n      <!-- <el-col :span=\"12\">\r\n         <el-card>\r\n            <div>\r\n               <div id=\"line2\" style=\"width: 100%;height: 400px\"></div>\r\n            </div>\r\n         </el-card>\r\n      </el-col> -->\r\n   </el-row>\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\n\r\nconst lineoption1 = {\r\n  title: {text: '出库金额统计', left:'center'},\r\n  legend: {data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],top:'bottom'},\r\n  tooltip: {trigger: 'axis'},\r\n  xAxis: {type: 'category',data: []},\r\n  yAxis: {type: 'value'},\r\n  series: [\r\n    {name: '1号仓库',type: 'line',data: []},\r\n    {name: '2号仓库',type: 'line',data: []},\r\n    {name: '3号仓库',type: 'line',data: []},\r\n    {name: '4号仓库',type: 'line',data: []},\r\n    {name: '5号仓库',type: 'line',data: []}\r\n  ]\r\n};\r\n\r\nconst lineoption2 = {\r\n  title: {text: '入库金额统计', left:'center'},\r\n  legend: {data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],top:'bottom'},\r\n  tooltip: {trigger: 'axis'},\r\n  xAxis: {type: 'category',data: []},\r\n  yAxis: {type: 'value'},\r\n  series: [\r\n    {name: '1号仓库',type: 'line',data: []},\r\n    {name: '2号仓库',type: 'line',data: []},\r\n    {name: '3号仓库',type: 'line',data: []},\r\n    {name: '4号仓库',type: 'line',data: []},\r\n    {name: '5号仓库',type: 'line',data: []}\r\n  ]\r\n};\r\n\r\nconst pieoption = {\r\n  title: {\r\n    text: '产品出库金额占比',\r\n    left: 'center'\r\n  },\r\n  tooltip: {\r\n    trigger: 'item'\r\n  },\r\n  legend: {\r\n    orient: 'vertical',\r\n    left: 'left'\r\n  },\r\n  series: [\r\n    {\r\n      name: '产品出库金额',\r\n      type: 'pie',\r\n      radius: '50%',\r\n      data: [],\r\n      emphasis: {\r\n        itemStyle: {\r\n          shadowBlur: 10,\r\n          shadowOffsetX: 0,\r\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n        }\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\n export default {\r\n    name:'app',\r\n    data () {\r\n       return {\r\n\r\n       }\r\n    },\r\n    components: {\r\n\r\n    },\r\n    methods: { \r\n\r\n    },\r\n    mounted () {//等待页面全部元素加载完再初始化，不然 会报错\r\n      let lineDom1 = document.getElementById('line1');\r\n      let lineChart1 = echarts.init(lineDom1);\r\n      lineChart1.setOption(lineoption1);\r\n      this.$request.get('/linechartsIn').then(res =>{\r\n         lineoption1.xAxis.data = res.data?.line1?.map(v=>v.date) || [];\r\n        // 更新每个仓库的数据\r\n        lineoption1.series.forEach((series, index) => {\r\n            // 字段名：warehouse1, warehouse2...\r\n            const field = `warehouse${index + 1}`;\r\n            series.data = res.data.map(v => v[field] || 0);\r\n        });\r\n        // 重新渲染图表\r\n        lineChart1.setOption(lineoption1);\r\n    }).catch(error => {\r\n        console.error('获取图表数据失败:', error);\r\n    })\r\n\r\n\r\n      let lineDom2 = document.getElementById('line2');\r\n      let lineChart2 = echarts.init(lineDom2);\r\n      lineChart2.setOption(lineoption2);\r\n      this.$request.get('/linechartsOut').then(res =>{\r\n         lineoption2.xAxis.data = res.data?.line2?.map(v=>v.date) || [];\r\n        // 更新每个仓库的数据\r\n        lineoption2.series.forEach((series, index) => {\r\n            // 字段名：warehouse1, warehouse2...\r\n            const field = `warehouse${index + 1}`;\r\n            series.data = res.data.map(v => v[field] || 0);\r\n        });\r\n        // 重新渲染图表\r\n        lineChart2.setOption(lineoption2);\r\n    }).catch(error => {\r\n        console.error('获取图表数据失败:', error);\r\n    })\r\n\r\n      let pieDom = document.getElementById('pie');\r\n      let piehart = echarts.init(pieDom);\r\n      piehart.setOption(pieoption);\r\n      this.$request.get('/piecharts').then(res =>  {\r\n        // baroption.series[1].data = res.data?.bar?.map(v => v.price)||[]\r\n        pieoption.series[0].data = res.data?.pie?.map(v => v.value)||[]\r\n        piehart.setOption(pieoption);\r\n      })\r\n\r\n\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n.el-row {\r\nmargin-top: 20px;\r\nmargin-bottom: 20px;\r\n}\r\n \r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}