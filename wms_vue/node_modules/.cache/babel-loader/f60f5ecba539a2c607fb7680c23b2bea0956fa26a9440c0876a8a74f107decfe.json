{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from '@/request/request';\nexport default {\n  name: 'app',\n  data() {\n    //id校验\n    var checkId = (rule, value, callback) => {\n      const num = Number(value);\n      if (isNaN(num)) {\n        // 检查是否为有效数字\n        return callback(new Error('请输入数字值')); // 返回并终止\n      }\n      if (!Number.isInteger(num)) {\n        // 检查是否为整数\n        return callback(new Error('必须为整数')); // 返回并终止\n      }\n      if (value.length !== 4) {\n        // 检查原始输入长度\n        return callback(new Error('必须是4位工号')); // 返回并终止\n      }\n      return callback();\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        return callback(new Error('请输入密码'));\n      }\n      return callback();\n    };\n    return {\n      ruleForm: {\n        password: '',\n        userid: ''\n      },\n      rules: {\n        password: [{\n          validator: validatePass,\n          trigger: 'change'\n        }],\n        userid: [{\n          validator: checkId,\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  components: {},\n  methods: {\n    login() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        // console.log(\"valid:\",valid);\n        if (valid) {\n          request.post('/user/login', this.ruleForm).then(res => {\n            if (res.code == 0) {\n              this.$message.success(\"登录成功\");\n              localStorage.setItem('user', JSON.stringify(res.data)); //存储用户数据\n              this.$router.push({\n                path: '/main'\n              });\n              let user = JSON.parse(localStorage.getItem(\"user\") || '{}'); //从当前缓存获取token\n              console.log(user.token);\n              console.log(res.code);\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    toregister() {\n      this.$router.push({\n        path: '/register'\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","checkId","rule","value","callback","num","Number","isNaN","Error","isInteger","length","validatePass","ruleForm","password","userid","rules","validator","trigger","components","methods","login","$refs","validate","valid","post","then","res","code","$message","success","localStorage","setItem","JSON","stringify","$router","push","path","user","parse","getItem","console","log","token","error","msg","resetForm","formName","resetFields","toregister"],"sources":["src/components/user_login.vue"],"sourcesContent":["<template>\r\n <div id='app'>\r\n    <div style=\"height:100vh; display:flex; justify-content:center; align-items:center;background-color:#8da1e2\">     \r\n    <div style=\"display:flex; align-items:center;justify-content:center; background-color:white; width:30% ; height:50%; border-radius:5px\">\r\n      <el-form :model=\"ruleForm\" style=\"width:80%;\" :rules=\"rules\" ref=\"ruleForm\"  class=\"demo-ruleForm\" >\r\n      <!-- <el-form > -->\r\n        <div style=\"font-size:20px ;font-weight:bold ; text-align:center;\">欢迎登录仓库管理系统</div>\r\n        <el-form-item prop=\"userid\" style=\"margin-top:20px;\">\r\n            <el-input placeholder=\" 请输入工号\"  v-model=\"ruleForm.userid\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n            <el-input show-password placeholder=\" 请输入密码\" type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>                      \r\n            <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n        <div> <p class=\"text-center mt-3\">没有账号? <a href=\"#\"  @click=\"toregister\">点击注册</a></p></div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport request from '@/request/request'\r\n export default {\r\n    name:'app',\r\n    data () {\r\n//id校验\r\n      var checkId = (rule, value, callback) => {\r\n        const num = Number(value);\r\n        if (isNaN(num)) { // 检查是否为有效数字\r\n          return callback(new Error('请输入数字值')); // 返回并终止\r\n        }\r\n\r\n        if (!Number.isInteger(num)) { // 检查是否为整数\r\n          return callback(new Error('必须为整数')); // 返回并终止\r\n        }\r\n\r\n        if (value.length !== 4) { // 检查原始输入长度\r\n          return callback(new Error('必须是4位工号')); // 返回并终止\r\n        }\r\n        return callback();\r\n      };\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          return callback(new Error('请输入密码'));\r\n        }\r\n        return callback();\r\n      };\r\n\r\n       return {\r\n        ruleForm: {\r\n          password: '',\r\n          userid: '',\r\n       },\r\n       rules: {\r\n          password: [\r\n            { validator: validatePass, trigger: 'change' }\r\n          ],\r\n          userid: [\r\n            { validator: checkId, trigger: 'change' }\r\n          ],\r\n        }\r\n       };\r\n    },\r\n    components: {\r\n\r\n    },\r\n    methods: { \r\n      login(){\r\n        this.$refs[\"ruleForm\"].validate((valid) => {\r\n          // console.log(\"valid:\",valid);\r\n          if (valid){\r\n            request.post('/user/login',this.ruleForm).then(res=>{\r\n              if(res.code==0){\r\n                this.$message.success(\"登录成功\");\r\n                localStorage.setItem('user',JSON.stringify(res.data));//存储用户数据\r\n                this.$router.push({path:'/main'})\r\n                let user= JSON.parse(localStorage.getItem(\"user\") ||'{}');//从当前缓存获取token\r\n                console.log(user.token);\r\n                console.log(res.code);\r\n              }else{\r\n                this.$message.error(res.msg);\r\n              }\r\n            })\r\n          }  \r\n        })\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      },\r\n      toregister(){\r\n        this.$router.push({path:'/register'})\r\n      },\r\n\r\n        \r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n.el-form-item {\r\n  margin-bottom: 22px; /* 默认是 18px，增加间距 */\r\n\r\n}              \r\n \r\n</style>\r\n"],"mappings":";AA4BA,OAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;IACA,IAAAC,OAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,MAAAC,GAAA,GAAAC,MAAA,CAAAH,KAAA;MACA,IAAAI,KAAA,CAAAF,GAAA;QAAA;QACA,OAAAD,QAAA,KAAAI,KAAA;MACA;MAEA,KAAAF,MAAA,CAAAG,SAAA,CAAAJ,GAAA;QAAA;QACA,OAAAD,QAAA,KAAAI,KAAA;MACA;MAEA,IAAAL,KAAA,CAAAO,MAAA;QAAA;QACA,OAAAN,QAAA,KAAAI,KAAA;MACA;MACA,OAAAJ,QAAA;IACA;IACA,IAAAO,YAAA,GAAAA,CAAAT,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACA,OAAAC,QAAA,KAAAI,KAAA;MACA;MACA,OAAAJ,QAAA;IACA;IAEA;MACAQ,QAAA;QACAC,QAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,SAAA,EAAAL,YAAA;UAAAM,OAAA;QAAA,EACA;QACAH,MAAA,GACA;UAAAE,SAAA,EAAAf,OAAA;UAAAgB,OAAA;QAAA;MAEA;IACA;EACA;EACAC,UAAA,GAEA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA;QACA,IAAAA,KAAA;UACAzB,OAAA,CAAA0B,IAAA,qBAAAZ,QAAA,EAAAa,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACAC,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAP,GAAA,CAAA1B,IAAA;cACA,KAAAkC,OAAA,CAAAC,IAAA;gBAAAC,IAAA;cAAA;cACA,IAAAC,IAAA,GAAAL,IAAA,CAAAM,KAAA,CAAAR,YAAA,CAAAS,OAAA;cACAC,OAAA,CAAAC,GAAA,CAAAJ,IAAA,CAAAK,KAAA;cACAF,OAAA,CAAAC,GAAA,CAAAf,GAAA,CAAAC,IAAA;YACA;cACA,KAAAC,QAAA,CAAAe,KAAA,CAAAjB,GAAA,CAAAkB,GAAA;YACA;UACA;QACA;MACA;IACA;IACAC,UAAAC,QAAA;MACA,KAAAzB,KAAA,CAAAyB,QAAA,EAAAC,WAAA;IACA;IACAC,WAAA;MACA,KAAAd,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EAGA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}