{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport * as echarts from 'echarts';\nconst lineoption1 = {\n  title: {\n    text: '出库金额统计',\n    left: 'center'\n  },\n  legend: {\n    data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],\n    top: 'bottom'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: '1号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '2号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '3号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '4号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '5号仓库',\n    type: 'line',\n    data: []\n  }]\n};\nconst lineoption2 = {\n  title: {\n    text: '入库金额统计',\n    left: 'center'\n  },\n  legend: {\n    data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],\n    top: 'bottom'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: '1号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '2号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '3号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '4号仓库',\n    type: 'line',\n    data: []\n  }, {\n    name: '5号仓库',\n    type: 'line',\n    data: []\n  }]\n};\nexport default {\n  name: 'app',\n  data() {\n    return {};\n  },\n  components: {},\n  methods: {},\n  mounted() {\n    //等待页面全部元素加载完再初始化，不然 会报错\n    //   let lineDom1 = document.getElementById('line1');\n    //   let lineChart1 = echarts.init(lineDom1);\n    //   lineChart1.setOption(lineoption1);\n    //   this.$request.get('/linechartsIn').then(res =>{\n    //      lineoption1.xAxis.data = res.data?.line1?.map(v=>v.date) || [];\n    //     // 更新每个仓库的数据\n    //     lineoption1.series.forEach((series, index) => {\n    //         // 字段名：warehouse1, warehouse2...\n    //         const field = `warehouse${index + 1}`;\n    //         series.data = res.data.map(v => v[field] || 0);\n    //     });\n    //     // 重新渲染图表\n    //     lineChart1.setOption(lineoption1);\n    // }).catch(error => {\n    //     console.error('获取图表数据失败:', error);\n    // })\n\n    let lineDom2 = document.getElementById('line2');\n    let lineChart2 = echarts.init(lineDom2);\n    lineChart2.setOption(lineoption2);\n    this.$request.get('/linechartsOut').then(res => {\n      lineoption2.xAxis.data = res.data?.line2?.map(v => v.date) || [];\n      // 更新每个仓库的数据\n      lineoption2.series.forEach((series, index) => {\n        // 字段名：warehouse1, warehouse2...\n        const field = `warehouse${index + 1}`;\n        series.data = res.data.map(v => v[field] || 0);\n      });\n      // 重新渲染图表\n      lineChart2.setOption(lineoption2);\n    }).catch(error => {\n      console.error('获取图表数据失败:', error);\n    });\n    let lineDom1 = document.getElementById('line1');\n    let lineChart1 = echarts.init(lineDom1);\n    lineChart1.setOption(lineoption1);\n    this.$request.get('/recordIn/charts').then(res => {\n      baroption.xAxis[0].data = res.data?.bar?.map(v => v.category) || [];\n      baroption.series[0].data = res.data?.bar?.map(v => v.quantity) || [];\n      baroption.series[1].data = res.data?.bar?.map(v => v.price) || [];\n      barChart.setOption(lineoption1);\n    });\n  }\n};","map":{"version":3,"names":["echarts","lineoption1","title","text","left","legend","data","top","tooltip","trigger","xAxis","type","yAxis","series","name","lineoption2","components","methods","mounted","lineDom2","document","getElementById","lineChart2","init","setOption","$request","get","then","res","line2","map","v","date","forEach","index","field","catch","error","console","lineDom1","lineChart1","baroption","bar","category","quantity","price","barChart"],"sources":["src/components/manager_record/view_record.vue"],"sourcesContent":["<template>\r\n <div >\r\n   <el-row :gutter=\"10\" class=\"el-row\">\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div id=\"line1\" style=\"width: 100%;height: 400px\"></div>\r\n         </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div>\r\n               <div id=\"line2\" style=\"width: 100%;height: 400px\"></div>\r\n            </div>\r\n         </el-card>\r\n      </el-col>\r\n   </el-row>\r\n\r\n   <el-row :gutter=\"10\" class=\"el-row\">\r\n      <el-col :span=\"12\">\r\n         <el-card>\r\n            <div id=\"pie\" style=\"width: 100%;height: 400px\"></div>\r\n         </el-card>\r\n      </el-col>\r\n\r\n      <!-- <el-col :span=\"12\">\r\n         <el-card>\r\n            <div>\r\n               <div id=\"line2\" style=\"width: 100%;height: 400px\"></div>\r\n            </div>\r\n         </el-card>\r\n      </el-col> -->\r\n   </el-row>\r\n\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\n\r\nconst lineoption1 = {\r\n  title: {text: '出库金额统计', left:'center'},\r\n  legend: {data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],top:'bottom'},\r\n  tooltip: {trigger: 'axis'},\r\n  xAxis: {type: 'category',data: []},\r\n  yAxis: {type: 'value'},\r\n  series: [\r\n    {name: '1号仓库',type: 'line',data: []},\r\n    {name: '2号仓库',type: 'line',data: []},\r\n    {name: '3号仓库',type: 'line',data: []},\r\n    {name: '4号仓库',type: 'line',data: []},\r\n    {name: '5号仓库',type: 'line',data: []}\r\n  ]\r\n};\r\n\r\nconst lineoption2 = {\r\n  title: {text: '入库金额统计', left:'center'},\r\n  legend: {data: ['1号仓库', '2号仓库', '3号仓库', '4号仓库', '5号仓库'],top:'bottom'},\r\n  tooltip: {trigger: 'axis'},\r\n  xAxis: {type: 'category',data: []},\r\n  yAxis: {type: 'value'},\r\n  series: [\r\n    {name: '1号仓库',type: 'line',data: []},\r\n    {name: '2号仓库',type: 'line',data: []},\r\n    {name: '3号仓库',type: 'line',data: []},\r\n    {name: '4号仓库',type: 'line',data: []},\r\n    {name: '5号仓库',type: 'line',data: []}\r\n  ]\r\n};\r\n\r\n\r\n\r\n export default {\r\n    name:'app',\r\n    data () {\r\n       return {\r\n\r\n       }\r\n    },\r\n    components: {\r\n\r\n    },\r\n    methods: { \r\n\r\n    },\r\n    mounted () {//等待页面全部元素加载完再初始化，不然 会报错\r\n    //   let lineDom1 = document.getElementById('line1');\r\n    //   let lineChart1 = echarts.init(lineDom1);\r\n    //   lineChart1.setOption(lineoption1);\r\n    //   this.$request.get('/linechartsIn').then(res =>{\r\n    //      lineoption1.xAxis.data = res.data?.line1?.map(v=>v.date) || [];\r\n    //     // 更新每个仓库的数据\r\n    //     lineoption1.series.forEach((series, index) => {\r\n    //         // 字段名：warehouse1, warehouse2...\r\n    //         const field = `warehouse${index + 1}`;\r\n    //         series.data = res.data.map(v => v[field] || 0);\r\n    //     });\r\n    //     // 重新渲染图表\r\n    //     lineChart1.setOption(lineoption1);\r\n    // }).catch(error => {\r\n    //     console.error('获取图表数据失败:', error);\r\n    // })\r\n\r\n\r\n      let lineDom2 = document.getElementById('line2');\r\n      let lineChart2 = echarts.init(lineDom2);\r\n      lineChart2.setOption(lineoption2);\r\n      this.$request.get('/linechartsOut').then(res =>{\r\n         lineoption2.xAxis.data = res.data?.line2?.map(v=>v.date) || [];\r\n        // 更新每个仓库的数据\r\n        lineoption2.series.forEach((series, index) => {\r\n            // 字段名：warehouse1, warehouse2...\r\n            const field = `warehouse${index + 1}`;\r\n            series.data = res.data.map(v => v[field] || 0);\r\n        });\r\n        // 重新渲染图表\r\n        lineChart2.setOption(lineoption2);\r\n    }).catch(error => {\r\n        console.error('获取图表数据失败:', error);\r\n    })\r\n\r\n      let lineDom1 = document.getElementById('line1');\r\n      let lineChart1 = echarts.init(lineDom1);\r\n      lineChart1.setOption(lineoption1);\r\n      \r\n      this.$request.get('/recordIn/charts').then(res =>{\r\n        baroption.xAxis[0].data = res.data?.bar?.map(v => v.category)||[]\r\n        baroption.series[0].data = res.data?.bar?.map(v => v.quantity)||[]\r\n        baroption.series[1].data = res.data?.bar?.map(v => v.price)||[]\r\n        barChart.setOption(lineoption1);\r\n      })\r\n\r\n\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n.el-row {\r\nmargin-top: 20px;\r\nmargin-bottom: 20px;\r\n}\r\n \r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}